{"ast":null,"code":"import _asyncToGenerator from \"/home/seo/Desktop/Parcial_front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { mainEndpoint } from './utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CategoryService {\n  constructor(_http) {\n    this._http = _http;\n    this.urlApiCategory = mainEndpoint + '/stock-pwfe/categoria';\n    this.urlApiSubCategory = mainEndpoint + '/stock-pwfe/tipoProducto';\n    this.categories = [];\n    this.subCategories = [];\n  }\n\n  getAllCategories() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        lista\n      } = yield _this._http.get(_this.urlApiCategory).toPromise();\n      const newCategories = lista.map(l => {\n        return {\n          id: l.idCategoria,\n          name: l.descripcion\n        };\n      });\n      _this.categories = newCategories;\n      return newCategories;\n    })();\n  }\n\n  createCategory(name) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const result = yield _this2._http.post(_this2.urlApiCategory, {\n        descripcion: name\n      }).toPromise();\n      return {\n        id: result.idCategoria,\n        name: result.descripcion\n      };\n    })();\n  }\n\n  getAllSubCategories() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        lista\n      } = yield _this3._http.get(_this3.urlApiSubCategory).toPromise();\n      const newSubCategories = lista.map(l => {\n        return {\n          id: l.idTipoProducto,\n          categoryId: l.idCategoria.idCategoria,\n          name: l.descripcion\n        };\n      });\n      console.log('get all sub categories result:', newSubCategories);\n      _this3.subCategories = newSubCategories;\n      return newSubCategories;\n    })();\n  }\n\n  createSubCategory(categoryId, name) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const result = yield _this4._http.put(_this4.urlApiSubCategory, {\n        idCategoria: {\n          idCategoria: categoryId\n        },\n        descripcion: name\n      }).toPromise();\n      return {\n        id: result.idCategoria,\n        name: result.descripcion\n      };\n    })();\n  }\n\n}\n\nCategoryService.ɵfac = function CategoryService_Factory(t) {\n  return new (t || CategoryService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nCategoryService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: CategoryService,\n  factory: CategoryService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/seo/Desktop/Parcial_front/src/app/services/category.service.ts"],"names":[],"mappings":";AAEA,SAAS,YAAT,QAA6B,SAA7B;;;AAKA,OAAM,MAAO,eAAP,CAAsB;AAM1B,EAAA,WAAA,CAAoB,KAApB,EAAqC;AAAjB,SAAA,KAAA,GAAA,KAAA;AALZ,SAAA,cAAA,GAAiB,YAAY,GAAG,uBAAhC;AACA,SAAA,iBAAA,GAAoB,YAAY,GAAG,0BAAnC;AACD,SAAA,UAAA,GAAyB,EAAzB;AACA,SAAA,aAAA,GAA4B,EAA5B;AAEmC;;AAE7B,EAAA,gBAAgB,GAAA;AAAA;;AAAA;AAC3B,YAAM;AAAE,QAAA;AAAF,gBAAkB,KAAI,CAAC,KAAL,CAAW,GAAX,CAAoB,KAAI,CAAC,cAAzB,EAAyC,SAAzC,EAAxB;AACA,YAAM,aAAa,GAAG,KAAK,CAAC,GAAN,CAAW,CAAD,IAAW;AACzC,eAAO;AACL,UAAA,EAAE,EAAE,CAAC,CAAC,WADD;AAEL,UAAA,IAAI,EAAE,CAAC,CAAC;AAFH,SAAP;AAID,OALqB,CAAtB;AAMA,MAAA,KAAI,CAAC,UAAL,GAAkB,aAAlB;AACA,aAAO,aAAP;AAT2B;AAU5B;;AAEY,EAAA,cAAc,CAAC,IAAD,EAAa;AAAA;;AAAA;AACtC,YAAM,MAAM,SAAS,MAAI,CAAC,KAAL,CAAW,IAAX,CAAqB,MAAI,CAAC,cAA1B,EAA0C;AAAE,QAAA,WAAW,EAAE;AAAf,OAA1C,EAAiE,SAAjE,EAArB;AACA,aAAO;AAAE,QAAA,EAAE,EAAE,MAAM,CAAC,WAAb;AAA0B,QAAA,IAAI,EAAE,MAAM,CAAC;AAAvC,OAAP;AAFsC;AAGvC;;AAEY,EAAA,mBAAmB,GAAA;AAAA;;AAAA;AAC9B,YAAM;AAAE,QAAA;AAAF,gBAAkB,MAAI,CAAC,KAAL,CAAW,GAAX,CAAoB,MAAI,CAAC,iBAAzB,EAA4C,SAA5C,EAAxB;AACA,YAAM,gBAAgB,GAAG,KAAK,CAAC,GAAN,CAAW,CAAD,IAAW;AAC5C,eAAO;AACL,UAAA,EAAE,EAAE,CAAC,CAAC,cADD;AAEL,UAAA,UAAU,EAAE,CAAC,CAAC,WAAF,CAAc,WAFrB;AAGL,UAAA,IAAI,EAAE,CAAC,CAAC;AAHH,SAAP;AAKD,OANwB,CAAzB;AAOA,MAAA,OAAO,CAAC,GAAR,CAAY,gCAAZ,EAA8C,gBAA9C;AACA,MAAA,MAAI,CAAC,aAAL,GAAqB,gBAArB;AACA,aAAO,gBAAP;AAX8B;AAY/B;;AAEY,EAAA,iBAAiB,CAAC,UAAD,EAAkB,IAAlB,EAA8B;AAAA;;AAAA;AAC1D,YAAM,MAAM,SAAS,MAAI,CAAC,KAAL,CAAW,GAAX,CACjB,MAAI,CAAC,iBADY,EAEjB;AAAE,QAAA,WAAW,EAAE;AAAE,UAAA,WAAW,EAAE;AAAf,SAAf;AAA4C,QAAA,WAAW,EAAE;AAAzD,OAFiB,EAGlB,SAHkB,EAArB;AAIA,aAAO;AAAE,QAAA,EAAE,EAAE,MAAM,CAAC,WAAb;AAA0B,QAAA,IAAI,EAAE,MAAM,CAAC;AAAvC,OAAP;AAL0D;AAM3D;;AA7CyB;;;mBAAf,e,EAAe,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAAf,e;AAAe,EAAA,OAAA,EAAf,eAAe,CAAA,I;AAAA,EAAA,UAAA,EAFd","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { mainEndpoint } from './utils';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CategoryService {\n  private urlApiCategory = mainEndpoint + '/stock-pwfe/categoria';\n  private urlApiSubCategory = mainEndpoint + '/stock-pwfe/tipoProducto';\n  public categories: Array<any> = [];\n  public subCategories: Array<any> = [];\n\n  constructor(private _http: HttpClient) { }\n\n  public async getAllCategories(): Promise<any[]> {\n    const { lista } = await this._http.get<any>(this.urlApiCategory).toPromise();\n    const newCategories = lista.map((l: any) => {\n      return {\n        id: l.idCategoria,\n        name: l.descripcion\n      }\n    });\n    this.categories = newCategories;\n    return newCategories;\n  }\n\n  public async createCategory(name: string): Promise<any> {\n    const result = await this._http.post<any>(this.urlApiCategory, { descripcion: name }).toPromise();\n    return { id: result.idCategoria, name: result.descripcion };\n  }\n\n  public async getAllSubCategories(): Promise<any[]> {\n    const { lista } = await this._http.get<any>(this.urlApiSubCategory).toPromise();\n    const newSubCategories = lista.map((l: any) => {\n      return {\n        id: l.idTipoProducto,\n        categoryId: l.idCategoria.idCategoria,\n        name: l.descripcion\n      }\n    });\n    console.log('get all sub categories result:', newSubCategories);\n    this.subCategories = newSubCategories;\n    return newSubCategories;\n  }\n\n  public async createSubCategory(categoryId: any, name: string): Promise<any> {\n    const result = await this._http.put<any>(\n        this.urlApiSubCategory,\n        { idCategoria: { idCategoria: categoryId }, descripcion: name })\n      .toPromise();\n    return { id: result.idCategoria, name: result.descripcion };\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}