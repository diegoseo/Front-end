{"ast":null,"code":"import _asyncToGenerator from \"/home/seo/Desktop/primer-parcial-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/doctor.service\";\nimport * as i2 from \"../includes/full-page-modal/full-page-modal.component\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../includes/back-modal/back-modal.component\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../includes/titled-input/titled-input.component\";\n\nfunction DoctorComponent_div_1_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const doctor_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"CI/RUC \", doctor_r1.document, \"\");\n  }\n}\n\nfunction DoctorComponent_div_1_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const calendar_r5 = ctx.$implicit;\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r3.getDayFromNumber(calendar_r5.day));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(calendar_r5.startHour);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(calendar_r5.endHour);\n  }\n}\n\nfunction DoctorComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelementStart(1, \"div\", 11);\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtemplate(3, DoctorComponent_div_1_div_3_Template, 2, 1, \"div\", 12);\n    i0.ɵɵelementStart(4, \"div\", 13);\n    i0.ɵɵelementStart(5, \"strong\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\");\n    i0.ɵɵelementStart(8, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function DoctorComponent_div_1_Template_button_click_8_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r7);\n      const doctor_r1 = restoredCtx.$implicit;\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.showEditModal(doctor_r1);\n    });\n    i0.ɵɵelement(9, \"i\", 15);\n    i0.ɵɵelementStart(10, \"div\", 16);\n    i0.ɵɵtext(11, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"table\", 17);\n    i0.ɵɵelementStart(13, \"tr\");\n    i0.ɵɵelementStart(14, \"th\");\n    i0.ɵɵtext(15, \"D\\u00EDa\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"th\");\n    i0.ɵɵtext(17, \"Hora de iniciio\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"th\");\n    i0.ɵɵtext(19, \"Hora de fin\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(20, DoctorComponent_div_1_tr_20_Template, 7, 3, \"tr\", 18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const doctor_r1 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", doctor_r1.document);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(doctor_r1.fullName);\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngForOf\", doctor_r1.calendars);\n  }\n}\n\nexport class DoctorComponent {\n  constructor(_service) {\n    this._service = _service;\n    this.showAddModal = false;\n    this.editingModal = false;\n    this.selectedDoctor = {};\n    this.doctors = [];\n    this.back = new EventEmitter();\n    this.clearSelectedDoctor();\n  }\n\n  clearSelectedDoctor() {\n    this.selectedDoctor = {\n      id: '',\n      name: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      document: '',\n      type: 'FISICA',\n      birthday: ''\n    };\n  }\n\n  showNewClientModal() {\n    this.clearSelectedDoctor();\n    this.editingModal = false;\n    this.showAddModal = true;\n  }\n\n  showEditModal(doctor) {\n    this.selectedDoctor = doctor;\n    this.showAddModal = true;\n    this.editingModal = true;\n  }\n\n  editDoctor() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this._service.editDoctor(_this.selectedDoctor);\n\n      _this.clearSelectedDoctor();\n\n      _this.editingModal = false;\n      _this.showAddModal = false;\n\n      _this.ngOnInit();\n    })();\n  }\n\n  createDoctor() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const newDoctor = yield _this2._service.createDoctor(_this2.selectedDoctor); // Concat new doctor\n\n      _this2.doctors = _this2.doctors.concat(newDoctor); // Clear\n\n      _this2.clearSelectedDoctor(); // Close\n\n\n      _this2.showAddModal = false;\n    })();\n  }\n\n  get isValidSelectedDoctor() {\n    return !!this.selectedDoctor && !!this.selectedDoctor.name && !!this.selectedDoctor.lastName && !!this.selectedDoctor.document && !!this.selectedDoctor.phone && !!this.selectedDoctor.type && !!this.selectedDoctor.birthday;\n  }\n\n  getDayFromNumber(number) {\n    const days = \"Domingo,Lunes,Martes,Miercoles,Jueves,Viernes,Sábado\".split(',');\n    return days[Math.max(0, Math.min(6, number))];\n  }\n\n  loadDoctors() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.doctors = yield _this3._service.getAllDoctors();\n    })();\n  }\n\n  ngOnInit() {\n    this.loadDoctors();\n  }\n\n}\n\nDoctorComponent.ɵfac = function DoctorComponent_Factory(t) {\n  return new (t || DoctorComponent)(i0.ɵɵdirectiveInject(i1.DoctorService));\n};\n\nDoctorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: DoctorComponent,\n  selectors: [[\"doctor-list\"]],\n  outputs: {\n    back: \"back\"\n  },\n  decls: 10,\n  vars: 12,\n  consts: [[\"title\", \"Doctores\", \"btnAddText\", \"Nuevo doctor\", 3, \"added\", \"back\"], [\"class\", \"bb p-15 column\", 4, \"ngFor\", \"ngForOf\"], [\"ngDefaultControl\", \"\", 3, \"title\", \"ngModel\", \"canConfirm\", \"confirmButtonText\", \"ngModelChange\", \"confirmed\"], [\"ngDefaultControl\", \"\", \"title\", \"Nombre\", 3, \"ngModel\", \"ngModelChange\"], [\"ngDefaultControl\", \"\", \"title\", \"Apellido\", 3, \"ngModel\", \"ngModelChange\"], [\"ngDefaultControl\", \"\", \"title\", \"Email\", 3, \"ngModel\", \"ngModelChange\"], [\"ngDefaultControl\", \"\", \"title\", \"Celular\", 3, \"ngModel\", \"ngModelChange\"], [\"ngDefaultControl\", \"\", \"title\", \"CI/RUC\", 3, \"ngModel\", \"ngModelChange\"], [\"ngDefaultControl\", \"\", \"title\", \"Fecha de nacimiento\", \"type\", \"date\", 3, \"ngModel\", \"ngModelChange\"], [\"ngDefaultControl\", \"\", \"title\", \"Tipo de persona\", 3, \"ngModel\", \"ngModelChange\"], [1, \"bb\", \"p-15\", \"column\"], [1, \"row\", \"justify-between\"], [\"class\", \"text-grey-5 fs-12\", 4, \"ngIf\"], [1, \"m-v-5\"], [1, \"row\", \"p-5\", \"text-grey-5\", 3, \"click\"], [1, \"fas\", \"fa-user-edit\"], [1, \"ml-5\", \"underline\"], [1, \"mt-10\"], [4, \"ngFor\", \"ngForOf\"], [1, \"text-grey-5\", \"fs-12\"]],\n  template: function DoctorComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"full-page-modal\", 0);\n      i0.ɵɵlistener(\"added\", function DoctorComponent_Template_full_page_modal_added_0_listener() {\n        return ctx.showNewClientModal();\n      })(\"back\", function DoctorComponent_Template_full_page_modal_back_0_listener() {\n        return ctx.back.emit();\n      });\n      i0.ɵɵtemplate(1, DoctorComponent_div_1_Template, 21, 3, \"div\", 1);\n      i0.ɵɵelementStart(2, \"back-modal\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorComponent_Template_back_modal_ngModelChange_2_listener($event) {\n        return ctx.showAddModal = $event;\n      })(\"confirmed\", function DoctorComponent_Template_back_modal_confirmed_2_listener() {\n        return ctx.editingModal ? ctx.editDoctor() : ctx.createDoctor();\n      });\n      i0.ɵɵelementStart(3, \"titled-input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorComponent_Template_titled_input_ngModelChange_3_listener($event) {\n        return ctx.selectedDoctor.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"titled-input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorComponent_Template_titled_input_ngModelChange_4_listener($event) {\n        return ctx.selectedDoctor.lastName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"titled-input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorComponent_Template_titled_input_ngModelChange_5_listener($event) {\n        return ctx.selectedDoctor.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"titled-input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorComponent_Template_titled_input_ngModelChange_6_listener($event) {\n        return ctx.selectedDoctor.phone = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"titled-input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorComponent_Template_titled_input_ngModelChange_7_listener($event) {\n        return ctx.selectedDoctor.document = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"titled-input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorComponent_Template_titled_input_ngModelChange_8_listener($event) {\n        return ctx.selectedDoctor.birthday = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"titled-input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function DoctorComponent_Template_titled_input_ngModelChange_9_listener($event) {\n        return ctx.selectedDoctor.type = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.doctors);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"title\", ctx.editingModal ? \"Modificar doctor \" + ctx.selectedDoctor.id : \"Nuevo doctor\")(\"ngModel\", ctx.showAddModal)(\"canConfirm\", ctx.isValidSelectedDoctor)(\"confirmButtonText\", ctx.editingModal ? \"Modificar\" : \"Crear\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedDoctor.name);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedDoctor.lastName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedDoctor.email);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedDoctor.phone);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedDoctor.document);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedDoctor.birthday);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedDoctor.type);\n    }\n  },\n  directives: [i2.FullPageModalComponent, i3.NgForOf, i4.BackModalComponent, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i6.TitledInputComponent, i3.NgIf],\n  styles: [\"table[_ngcontent-%COMP%] {\\n        border-collapse: collapse;\\n        width: 100%;\\n    }\\n\\n    td[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n        border: 1px solid #dddddd;\\n        text-align: left;\\n        padding: 8px;\\n    }\\n\\n    tr[_ngcontent-%COMP%]:nth-child(even) {\\n        background-color: #dddddd;\\n    }\"]\n});","map":{"version":3,"sources":["/home/seo/Desktop/primer-parcial-frontend/src/app/components/doctor/doctor.component.ts","/home/seo/Desktop/primer-parcial-frontend/src/app/components/doctor/doctor.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { DoctorService } from 'src/app/services/doctor.service';\n\n@Component({\n  selector: 'doctor-list',\n  templateUrl: './doctor.component.html'\n})\nexport class DoctorComponent implements OnInit {\n\n  public showAddModal: boolean = false;\n  public editingModal: boolean = false;\n  public selectedDoctor: any = {};\n  public doctors: Array<any> = [];\n  @Output() back = new EventEmitter();\n\n  constructor(private _service: DoctorService) {\n    this.clearSelectedDoctor();\n  }\n\n  clearSelectedDoctor() {\n    this.selectedDoctor = {\n      id: '',\n      name: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      document: '',\n      type: 'FISICA',\n      birthday: '',\n    };\n  }\n\n  showNewClientModal() {\n    this.clearSelectedDoctor();\n    this.editingModal = false;\n    this.showAddModal = true;\n  }\n\n  showEditModal(doctor: any) {\n    this.selectedDoctor = doctor;\n    this.showAddModal = true;\n    this.editingModal = true;\n  }\n\n  async editDoctor() {\n    await this._service.editDoctor(this.selectedDoctor);\n    this.clearSelectedDoctor();\n    this.editingModal = false;\n    this.showAddModal = false;\n    this.ngOnInit();\n  }\n\n  async createDoctor() {\n    const newDoctor = await this._service.createDoctor(\n      this.selectedDoctor\n    );\n    // Concat new doctor\n    this.doctors = this.doctors.concat(newDoctor);\n    // Clear\n    this.clearSelectedDoctor();\n    // Close\n    this.showAddModal = false;\n  }\n\n  public get isValidSelectedDoctor(): boolean {\n    return !!this.selectedDoctor &&\n      !!this.selectedDoctor.name &&\n      !!this.selectedDoctor.lastName &&\n      !!this.selectedDoctor.document &&\n      !!this.selectedDoctor.phone &&\n      !!this.selectedDoctor.type &&\n      !!this.selectedDoctor.birthday;\n  }\n\n  public getDayFromNumber(number: number): string {\n    const days = \"Domingo,Lunes,Martes,Miercoles,Jueves,Viernes,Sábado\".split(',');\n    return days[Math.max(0, Math.min(6, number))];\n  }\n\n  async loadDoctors() {\n    this.doctors = await this._service.getAllDoctors();\n  }\n\n  ngOnInit(): void {\n    this.loadDoctors();\n  }\n\n\n}\n","<style>\n    table {\n        border-collapse: collapse;\n        width: 100%;\n    }\n\n    td, th {\n        border: 1px solid #dddddd;\n        text-align: left;\n        padding: 8px;\n    }\n\n    tr:nth-child(even) {\n        background-color: #dddddd;\n    }\n</style>\n\n<full-page-modal title=\"Doctores\" btnAddText=\"Nuevo doctor\" (added)=\"showNewClientModal()\" (back)=\"back.emit()\">\n    <div *ngFor=\"let doctor of doctors\" class=\"bb p-15 column\">\n        <div class=\"row justify-between\">\n            <!-- PERSONAL INFO -->\n            <div>\n                <div *ngIf=\"doctor.document\" class=\"text-grey-5 fs-12\">CI/RUC {{doctor.document}}</div>\n                <div class=\"m-v-5\"><strong>{{doctor.fullName}}</strong></div>\n                <!--<div class=\"text-grey-5\">{{doctor.email}}</div>\n                <div class=\"text-grey-5\">{{doctor.phone}}</div>-->\n            </div>\n            <!-- EDIT BUTTON -->\n            <div>\n                <button class=\"row p-5 text-grey-5\" (click)=\"showEditModal(doctor)\">\n                    <i class=\"fas fa-user-edit\"></i>\n                    <div class=\"ml-5 underline\">Editar</div>\n                </button>\n            </div>\n        </div>\n        <!-- CALENDAR -->\n        <!--<div class=\"mt-10 mb-5 text-grey-2\">Calendario</div>-->\n        <table class=\"table\" class=\"mt-10\">\n            <tr>\n                <th>Día</th>\n                <th>Hora de iniciio</th>\n                <th>Hora de fin</th>\n            </tr>\n            <tr *ngFor=\"let calendar of doctor.calendars\">\n                <td>{{getDayFromNumber(calendar.day)}}</td>\n                <td>{{calendar.startHour}}</td>\n                <td>{{calendar.endHour}}</td>\n            </tr>\n        </table>\n    </div>\n\n    <back-modal \n        ngDefaultControl \n        [title]=\"editingModal?'Modificar doctor '+selectedDoctor.id:'Nuevo doctor'\"\n        [(ngModel)]=\"showAddModal\" \n        [canConfirm]=\"isValidSelectedDoctor\"\n        [confirmButtonText]=\"editingModal?'Modificar':'Crear'\"\n        (confirmed)=\"editingModal?editDoctor():createDoctor()\">\n        <!-- NAME INPUT -->\n        <titled-input \n            ngDefaultControl \n            title=\"Nombre\" \n            [(ngModel)]=\"selectedDoctor.name\">\n        </titled-input>\n        <!-- LAST NAME INPUT -->\n        <titled-input ngDefaultControl title=\"Apellido\" [(ngModel)]=\"selectedDoctor.lastName\">\n        </titled-input>\n        <!-- EMAIL INPUT -->\n        <titled-input ngDefaultControl title=\"Email\" [(ngModel)]=\"selectedDoctor.email\">\n        </titled-input>\n        <!-- PHONE INPUT -->\n        <titled-input ngDefaultControl title=\"Celular\" [(ngModel)]=\"selectedDoctor.phone\">\n        </titled-input>\n        <!-- DOCUMENT INPUT -->\n        <titled-input ngDefaultControl title=\"CI/RUC\" [(ngModel)]=\"selectedDoctor.document\">\n        </titled-input>\n        <!-- BIRTHDAY INPUT -->\n        <titled-input ngDefaultControl title=\"Fecha de nacimiento\" type=\"date\" [(ngModel)]=\"selectedDoctor.birthday\">\n        </titled-input>\n        <!-- TYPE INPUT -->\n        <titled-input ngDefaultControl title=\"Tipo de persona\" [(ngModel)]=\"selectedDoctor.type\">\n        </titled-input>\n\n    </back-modal>\n\n</full-page-modal>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}