{"ast":null,"code":"import _asyncToGenerator from \"/home/seo/Desktop/primer-parcial-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { mainEndpoint } from './utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ExceptionalHourService {\n  constructor(_http) {\n    this._http = _http;\n    this.urlApiExcHour = mainEndpoint + '/stock-pwfe/horarioExcepcion';\n    this.exchours = [];\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'usuario': 'usuario2'\n      })\n    };\n  }\n\n  newExcHourFromServer(h) {\n    return {\n      id: h.idEmpleado.idPersona,\n      date: h.fechaCadena,\n      flag: h.flagEsHabilitar,\n      hourOpen: h.horaAperturaCadena,\n      hourClose: h.horaCierreCadena,\n      interval: h.intervaloMinutos\n    };\n  }\n\n  newExcHourToSend(h) {\n    return {\n      idEmpleado: {\n        idPersona: h.id\n      },\n      fechaCadena: h.date,\n      horaAperturaCadena: h.hourOpen,\n      horaCierreCadena: h.hourClose,\n      intervaloMinutos: h.interval,\n      flagEsHabilitar: h.flag\n    };\n  }\n\n  getAllExceptionHours() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        lista\n      } = yield _this._http.get(_this.urlApiExcHour).toPromise();\n      const exchours = lista.map(h => _this.newExcHourFromServer(h));\n      console.log('exchours:', exchours);\n      _this.exchours = exchours;\n      return exchours;\n    })();\n  }\n\n  createExcHour(hour) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const result = yield _this2._http.post(_this2.urlApiExcHour, _this2.newExcHourToSend(hour), _this2.httpOptions).toPromise();\n      return _this2.newExcHourFromServer(result);\n    })();\n  }\n\n  editExcHour(hour) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this3._http.put(_this3.urlApiExcHour, _this3.newExcHourToSend(hour)).toPromise();\n    })();\n  }\n\n}\n\nExceptionalHourService.ɵfac = function ExceptionalHourService_Factory(t) {\n  return new (t || ExceptionalHourService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nExceptionalHourService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ExceptionalHourService,\n  factory: ExceptionalHourService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/seo/Desktop/primer-parcial-frontend/src/app/services/exceptionalhour.service.ts"],"names":[],"mappings":";AACA,SAAqB,WAArB,QAAwC,sBAAxC;AAGA,SAAS,YAAT,QAA+C,SAA/C;;;AAMA,OAAM,MAAO,sBAAP,CAA6B;AAWjC,EAAA,WAAA,CAAoB,KAApB,EAAqC;AAAjB,SAAA,KAAA,GAAA,KAAA;AAVZ,SAAA,aAAA,GAAgB,YAAY,GAAG,8BAA/B;AACD,SAAA,QAAA,GAAuB,EAAvB;AAEC,SAAA,WAAA,GAAuB;AAC7B,MAAA,OAAO,EAAE,IAAI,WAAJ,CAAgB;AACvB,wBAAiB,kBADM;AAEvB,mBAAW;AAFY,OAAhB;AADoB,KAAvB;AAOiC;;AAEjC,EAAA,oBAAoB,CAAC,CAAD,EAAO;AACjC,WAAO;AACL,MAAA,EAAE,EAAE,CAAC,CAAC,UAAF,CAAa,SADZ;AAEL,MAAA,IAAI,EAAE,CAAC,CAAC,WAFH;AAGL,MAAA,IAAI,EAAE,CAAC,CAAC,eAHH;AAIL,MAAA,QAAQ,EAAE,CAAC,CAAC,kBAJP;AAKL,MAAA,SAAS,EAAE,CAAC,CAAC,gBALR;AAML,MAAA,QAAQ,EAAE,CAAC,CAAC;AANP,KAAP;AAQD;;AACO,EAAA,gBAAgB,CAAC,CAAD,EAAO;AAC7B,WAAO;AACL,MAAA,UAAU,EAAC;AAAE,QAAA,SAAS,EAAE,CAAC,CAAC;AAAf,OADN;AAEL,MAAA,WAAW,EAAE,CAAC,CAAC,IAFV;AAGL,MAAA,kBAAkB,EAAE,CAAC,CAAC,QAHjB;AAIL,MAAA,gBAAgB,EAAE,CAAC,CAAC,SAJf;AAKL,MAAA,gBAAgB,EAAE,CAAC,CAAC,QALf;AAML,MAAA,eAAe,EAAE,CAAC,CAAC;AANd,KAAP;AAQD;;AAEY,EAAA,oBAAoB,GAAA;AAAA;;AAAA;AAC/B,YAAM;AAAE,QAAA;AAAF,gBAAkB,KAAI,CAAC,KAAL,CAAW,GAAX,CAAoB,KAAI,CAAC,aAAzB,EAAwC,SAAxC,EAAxB;AACA,YAAM,QAAQ,GAAE,KAAK,CAAC,GAAN,CAAW,CAAD,IAAY,KAAI,CAAC,oBAAL,CAA0B,CAA1B,CAAtB,CAAhB;AAEA,MAAA,OAAO,CAAC,GAAR,CAAY,WAAZ,EAAyB,QAAzB;AACA,MAAA,KAAI,CAAC,QAAL,GAAgB,QAAhB;AACA,aAAO,QAAP;AAN+B;AAOhC;;AAEY,EAAA,aAAa,CAAC,IAAD,EAAU;AAAA;;AAAA;AAClC,YAAM,MAAM,SAAS,MAAI,CAAC,KAAL,CAAW,IAAX,CACnB,MAAI,CAAC,aADc,EAEnB,MAAI,CAAC,gBAAL,CAAsB,IAAtB,CAFmB,EAGnB,MAAI,CAAC,WAHc,EAInB,SAJmB,EAArB;AAKA,aAAO,MAAI,CAAC,oBAAL,CAA0B,MAA1B,CAAP;AANkC;AAOnC;;AACY,EAAA,WAAW,CAAC,IAAD,EAAU;AAAA;;AAAA;AAChC,YAAM,MAAI,CAAC,KAAL,CAAW,GAAX,CACJ,MAAI,CAAC,aADD,EAEJ,MAAI,CAAC,gBAAL,CAAsB,IAAtB,CAFI,EAEyB,SAFzB,EAAN;AADgC;AAIjC;;AAvDgC;;;mBAAtB,sB,EAAsB,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,UAAA,C;AAAA,C;;;SAAtB,sB;AAAsB,EAAA,OAAA,EAAtB,sBAAsB,CAAA,I;AAAA,EAAA,UAAA,EAJrB","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\n\nimport { mainEndpoint, getFechaForQuery } from './utils';\n@Injectable({\n  providedIn: 'root'\n})\n\n\nexport class ExceptionalHourService {\n  private urlApiExcHour = mainEndpoint + '/stock-pwfe/horarioExcepcion';\n  public exchours: Array<any> = [];\n\n  private httpOptions: object  = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'usuario': 'usuario2'\n    })\n  \n  };\n  constructor(private _http: HttpClient) {}\n\n  private newExcHourFromServer(h: any) {\n    return {\n      id: h.idEmpleado.idPersona,\n      date: h.fechaCadena,\n      flag: h.flagEsHabilitar,\n      hourOpen: h.horaAperturaCadena,\n      hourClose: h.horaCierreCadena,\n      interval: h.intervaloMinutos,\n    }\n  }\n  private newExcHourToSend(h: any): any {\n    return {\n      idEmpleado:{ idPersona: h.id},\n      fechaCadena: h.date,\n      horaAperturaCadena: h.hourOpen,\n      horaCierreCadena: h.hourClose,\n      intervaloMinutos: h.interval,\n      flagEsHabilitar: h.flag,\n    }\n  }\n\n  public async getAllExceptionHours(): Promise<any[]> {\n    const { lista } = await this._http.get<any>(this.urlApiExcHour).toPromise();\n    const exchours= lista.map((h: any) => this.newExcHourFromServer(h));\n \n    console.log('exchours:', exchours);\n    this.exchours = exchours;\n    return exchours;\n  }\n\n  public async createExcHour(hour: any): Promise<any> {\n    const result = await this._http.post<any>(\n      this.urlApiExcHour,\n      this.newExcHourToSend(hour),\n      this.httpOptions\n    ).toPromise();\n    return this.newExcHourFromServer(result);\n  }\n  public async editExcHour(hour: any): Promise<any> {\n    await this._http.put<any>(\n      this.urlApiExcHour,\n      this.newExcHourToSend(hour)).toPromise();\n  }\n\n\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}