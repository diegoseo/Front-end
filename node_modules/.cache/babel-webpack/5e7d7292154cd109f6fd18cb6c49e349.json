{"ast":null,"code":"import _asyncToGenerator from \"/home/seo/Desktop/primer-parcial-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { HttpHeaders } from '@angular/common/http';\nimport { mainEndpoint, getFechaForQuery } from './utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ReservationService {\n  constructor(_http) {\n    this._http = _http;\n    this.urlApiPersona = mainEndpoint + '/stock-pwfe/persona';\n    this.urlApiReserva = mainEndpoint + '/stock-pwfe/reserva';\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json',\n        'usuario': 'usuario2'\n      })\n    };\n\n    this.mapReservations = reservation => Object.assign(Object.assign({}, reservation), {\n      fecha: new Date(reservation.fecha).toLocaleDateString(),\n      horaInicio: reservation.horaInicio.length <= 9 ? reservation.horaInicio.substr(0, 5) : reservation.horaInicio.substr(11, 5),\n      horaFin: reservation.horaFin.length <= 9 ? reservation.horaFin.substr(0, 5) : reservation.horaFin.substr(11, 5),\n      flagAsistio: reservation.flagAsistio ? 'Si' : 'No',\n      flagReserva: Number.isInteger(reservation.idReserva) ? 'Si' : 'No'\n    });\n  }\n\n  getCompleteAgenda(idFisioterapeuta, fechaDesde, fechaHasta) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const urlApi = `${_this.urlApiPersona}/${idFisioterapeuta}/agenda?fecha=${fechaDesde}`;\n      let obj = yield _this._http.get(urlApi).toPromise();\n      obj = obj.map(_this.mapReservations);\n      return obj;\n    })();\n  }\n\n  getFreeAgenda(idFisioterapeuta, fecha) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const urlApi = `${_this2.urlApiPersona}/${idFisioterapeuta}/agenda?fecha=${getFechaForQuery(fecha)}&disponible=S`;\n      const {\n        lista\n      } = yield _this2._http.get(urlApi).toPromise();\n      return lista;\n    })();\n  }\n\n  getBusyAgenda(idFisioterapeuta, fechaDesde, fechaHasta) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      const fechaDesdeCadena = getFechaForQuery(fechaDesde);\n      const fechaHastaCadena = getFechaForQuery(fechaHasta);\n      const requestObj = {\n        idEmpleado: {\n          idPersona: idFisioterapeuta\n        },\n        fechaDesdeCadena,\n        fechaHastaCadena\n      };\n      const urlApi = `${_this3.urlApiReserva}?ejemplo=${encodeURIComponent(JSON.stringify(requestObj))}`;\n      const {\n        lista\n      } = yield _this3._http.get(urlApi).toPromise();\n      return lista;\n    })();\n  }\n\n  createReservation(fechaCadena, horaInicioCadena, horaFinCadena, idEmpleado, idCliente) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const requestObj = {\n        fechaCadena,\n        horaInicioCadena,\n        horaFinCadena,\n        idEmpleado: {\n          idPersona: Number(idEmpleado)\n        },\n        idCliente: {\n          idPersona: Number(idCliente)\n        }\n      };\n      const result = yield _this4._http.post(_this4.urlApiReserva, requestObj, _this4.httpOptions).toPromise();\n      return result;\n    })();\n  }\n\n  updateReservation(idReserva, observacion, flagAsistio) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      const requestObj = {\n        idReserva,\n        observacion,\n        flagAsistio\n      };\n      const result = yield _this5._http.put(_this5.urlApiReserva, requestObj).toPromise();\n      return result;\n    })();\n  }\n\n  cancelReservation(idReserva) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      const result = yield _this6._http.delete(_this6.urlApiReserva + '/' + idReserva).toPromise();\n      return result;\n    })();\n  }\n\n}\n\nReservationService.ɵfac = function ReservationService_Factory(t) {\n  return new (t || ReservationService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nReservationService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ReservationService,\n  factory: ReservationService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"sources":["/home/seo/Desktop/primer-parcial-frontend/src/app/services/reservation.service.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { mainEndpoint, getFechaForQuery } from './utils';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ReservationService {\n  private urlApiPersona = mainEndpoint + '/stock-pwfe/persona';\n  private urlApiReserva = mainEndpoint + '/stock-pwfe/reserva';\n  private httpOptions: object  = {\n    headers: new HttpHeaders({\n      'Content-Type':  'application/json',\n      'usuario': 'usuario2'\n    })\n  \n  };\n  constructor(private _http: HttpClient) { }\n  \n  mapReservations = (reservation:any) => ({\n    ...reservation, \n    fecha:  new Date(reservation.fecha).toLocaleDateString(),\n    horaInicio: reservation.horaInicio.length <= 9 ? reservation.horaInicio.substr(0,5): reservation.horaInicio.substr(11,5),\n    horaFin: reservation.horaFin.length <= 9 ? reservation.horaFin.substr(0,5): reservation.horaFin.substr(11,5),\n    flagAsistio: reservation.flagAsistio ? 'Si' : 'No',\n    flagReserva: Number.isInteger(reservation.idReserva) ? 'Si' : 'No',\n  });\n  public async getCompleteAgenda(idFisioterapeuta: number, fechaDesde: string, fechaHasta: string): Promise<any[]> {\n    const urlApi:string = `${this.urlApiPersona}/${idFisioterapeuta}/agenda?fecha=${fechaDesde}`;\n    let obj:any = await this._http.get<any>(urlApi).toPromise();\n    obj = obj.map(this.mapReservations);\n    return obj;\n  }\n\n  public async getFreeAgenda(idFisioterapeuta: number, fecha: Date): Promise<any[]> {\n    const urlApi:string = `${this.urlApiPersona}/${idFisioterapeuta}/agenda?fecha=${getFechaForQuery(fecha)}&disponible=S`;\n    const { lista } = await this._http.get<any>(urlApi).toPromise();\n    return lista;\n  }\n  public async getBusyAgenda(idFisioterapeuta: number, fechaDesde: Date, fechaHasta: Date): Promise<any[]> {\n    const fechaDesdeCadena: string = getFechaForQuery(fechaDesde);\n    const fechaHastaCadena: string = getFechaForQuery(fechaHasta);\n    const requestObj:Object = {\n      idEmpleado:{\n        idPersona:idFisioterapeuta\n      },fechaDesdeCadena, fechaHastaCadena\n    };\n    const urlApi:string = `${this.urlApiReserva}?ejemplo=${encodeURIComponent(JSON.stringify(requestObj))}`;\n    const { lista } = await this._http.get<any>(urlApi).toPromise();\n    return lista;\n  }\n\n  public async createReservation(fechaCadena:string, horaInicioCadena:string, horaFinCadena:string, idEmpleado:number, idCliente:number ): Promise<any> {\n    const requestObj:Object = {\n      fechaCadena, horaInicioCadena, horaFinCadena, idEmpleado: {\n        idPersona: Number(idEmpleado)\n      }, idCliente: {\n        idPersona: Number(idCliente)\n      }\n    };\n    const result = await this._http.post<any>(this.urlApiReserva, requestObj, this.httpOptions).toPromise();\n    return result;\n  }\n  public async updateReservation(idReserva:number, observacion: string, flagAsistio: string): Promise<any> {\n    const requestObj: Object = {\n      idReserva, observacion, flagAsistio\n    };\n    const result = await this._http.put<any>(this.urlApiReserva, requestObj).toPromise();\n    return result;\n  }\n  public async cancelReservation( idReserva:number ): Promise<any> {\n    const result = await this._http.delete<any>(this.urlApiReserva + '/' + idReserva).toPromise();\n    return result;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}