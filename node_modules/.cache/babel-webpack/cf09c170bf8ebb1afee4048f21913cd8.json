{"ast":null,"code":"import _asyncToGenerator from \"/home/seo/Desktop/primer-parcial-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { getFechaForQuery } from 'src/app/services/utils';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/doctor.service\";\nimport * as i2 from \"src/app/services/reservation.service\";\nimport * as i3 from \"src/app/services/patient.service\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@angular/common\";\n\nfunction ReservationComponent_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const doctor_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", doctor_r2.idPersona);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" Dr. \", doctor_r2.nombre, \" \", doctor_r2.apellido, \" \");\n  }\n}\n\nfunction ReservationComponent_tr_30_td_13_option_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 9);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const patient_r8 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", patient_r8.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", patient_r8.fullName, \" \");\n  }\n}\n\nfunction ReservationComponent_tr_30_td_13_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵelementStart(1, \"select\", 2);\n    i0.ɵɵlistener(\"ngModelChange\", function ReservationComponent_tr_30_td_13_Template_select_ngModelChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r10);\n      const ctx_r9 = i0.ɵɵnextContext(2);\n      return ctx_r9.selectedPatientId = $event;\n    });\n    i0.ɵɵtemplate(2, ReservationComponent_tr_30_td_13_option_2_Template, 2, 2, \"option\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 5);\n    i0.ɵɵlistener(\"click\", function ReservationComponent_tr_30_td_13_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const reservation_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r11 = i0.ɵɵnextContext();\n      return ctx_r11.reservate(reservation_r3);\n    });\n    i0.ɵɵtext(4, \"Reservar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngModel\", ctx_r4.selectedPatientId);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r4.patients);\n  }\n}\n\nfunction ReservationComponent_tr_30_ng_template_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"td\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 12);\n    i0.ɵɵlistener(\"click\", function ReservationComponent_tr_30_ng_template_14_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const reservation_r3 = i0.ɵɵnextContext().$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.deleteReservation(reservation_r3.idReserva);\n    });\n    i0.ɵɵtext(3, \"Cancelar reserva\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const reservation_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", reservation_r3.idCliente.nombreCompleto, \" \");\n  }\n}\n\nfunction ReservationComponent_tr_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"td\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"td\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"td\");\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(13, ReservationComponent_tr_30_td_13_Template, 5, 2, \"td\", 10);\n    i0.ɵɵtemplate(14, ReservationComponent_tr_30_ng_template_14_Template, 4, 1, \"ng-template\", null, 11, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const reservation_r3 = ctx.$implicit;\n\n    const _r5 = i0.ɵɵreference(15);\n\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reservation_r3.fecha);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reservation_r3.horaInicio);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reservation_r3.horaFin);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reservation_r3.observacion);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reservation_r3.flagAsistio);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(reservation_r3.flagReserva);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", reservation_r3.flagReserva === \"No\")(\"ngIfElse\", _r5);\n  }\n}\n\nexport class ReservationComponent {\n  constructor(_doctorService, _reservationService, _patienService) {\n    this._doctorService = _doctorService;\n    this._reservationService = _reservationService;\n    this._patienService = _patienService;\n    this.reservations = [];\n    this.patients = [];\n    this.doctors = [];\n    this.selectedDoctorId = 0;\n    this.selectedPatientId = 0;\n    const fecha = getFechaForQuery(new Date(new Date().valueOf() - 1000 * 60 * 60 * 24));\n    this.fechaDesdeReserva = `${fecha.substr(0, 4)}-${fecha.substr(4, 2)}-${fecha.substr(6)}`;\n    this.fechaHastaReserva = `${fecha.substr(0, 4)}-${fecha.substr(4, 2)}-${fecha.substr(6)}`;\n  }\n\n  deleteReservation(idReserva) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this._reservationService.cancelReservation(idReserva);\n      yield _this.getDoctorAgenda();\n    })();\n  }\n\n  reservate(reservation) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this2.selectedDoctorId && _this2.selectedPatientId && reservation) {\n        let {\n          fechaCadena,\n          horaInicioCadena,\n          horaFinCadena\n        } = reservation;\n        yield _this2._reservationService.createReservation(fechaCadena, horaInicioCadena, horaFinCadena, _this2.selectedDoctorId, _this2.selectedPatientId);\n        yield _this2.getDoctorAgenda();\n      } else {\n        console.log('Error reserving...');\n      }\n    })();\n  }\n\n  loadPatients() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this3.patients = yield _this3._patienService.getAllPatients();\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }\n\n  loadDoctors() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      try {\n        _this4.doctors = yield _this4._doctorService.getAllFisios();\n      } catch (error) {\n        console.log(error);\n      }\n    })();\n  }\n\n  getDoctorAgenda() {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      _this5.reservations = yield _this5._reservationService.getCompleteAgenda(_this5.selectedDoctorId, _this5.fechaDesdeReserva.replace(/-/gi, ''), _this5.fechaHastaReserva.replace(/-/gi, ''));\n    })();\n  }\n\n  ngOnInit() {\n    this.loadDoctors();\n    this.loadPatients();\n  }\n\n}\n\nReservationComponent.ɵfac = function ReservationComponent_Factory(t) {\n  return new (t || ReservationComponent)(i0.ɵɵdirectiveInject(i1.DoctorService), i0.ɵɵdirectiveInject(i2.ReservationService), i0.ɵɵdirectiveInject(i3.PatientService));\n};\n\nReservationComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ReservationComponent,\n  selectors: [[\"reservation-tab\"]],\n  decls: 31,\n  vars: 4,\n  consts: [[1, \"reservasContent\"], [1, \"reservasTitle\"], [3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"ngDefaultControl\", \"\", \"type\", \"date\", 3, \"ngModel\", \"ngModelChange\"], [1, \"p-10\", \"text-white\", \"br-4\", \"bg-primary\", 3, \"click\"], [1, \"reservasContent\", \"tableContainer\"], [1, \"mt-10\"], [4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [4, \"ngIf\", \"ngIfElse\"], [\"reservedClientInfo\", \"\"], [1, \"p-10\", \"text-white\", \"br-4\", \"bg-red\", 3, \"click\"]],\n  template: function ReservationComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"main\", 0);\n      i0.ɵɵelementStart(1, \"h2\", 1);\n      i0.ɵɵtext(2, \"Reservas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtext(3, \" Doctor : \");\n      i0.ɵɵelementStart(4, \"select\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function ReservationComponent_Template_select_ngModelChange_4_listener($event) {\n        return ctx.selectedDoctorId = $event;\n      });\n      i0.ɵɵtemplate(5, ReservationComponent_option_5_Template, 2, 3, \"option\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(6, \"br\");\n      i0.ɵɵelement(7, \"br\");\n      i0.ɵɵtext(8, \" Fecha desde: \");\n      i0.ɵɵelementStart(9, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function ReservationComponent_Template_input_ngModelChange_9_listener($event) {\n        return ctx.fechaDesdeReserva = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(10, \"br\");\n      i0.ɵɵelement(11, \"br\");\n      i0.ɵɵelementStart(12, \"button\", 5);\n      i0.ɵɵlistener(\"click\", function ReservationComponent_Template_button_click_12_listener() {\n        return ctx.getDoctorAgenda();\n      });\n      i0.ɵɵtext(13, \"Ver disponibilidad\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"section\", 6);\n      i0.ɵɵelementStart(15, \"table\", 7);\n      i0.ɵɵelementStart(16, \"tr\");\n      i0.ɵɵelementStart(17, \"th\");\n      i0.ɵɵtext(18, \"D\\u00EDa\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(19, \"th\");\n      i0.ɵɵtext(20, \"Hora de inicio\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"th\");\n      i0.ɵɵtext(22, \"Hora de fin\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(23, \"th\");\n      i0.ɵɵtext(24, \"Observacion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(25, \"th\");\n      i0.ɵɵtext(26, \"Asistio\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"th\");\n      i0.ɵɵtext(28, \"Esta reservado\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(29, \"th\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(30, ReservationComponent_tr_30_Template, 16, 8, \"tr\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedDoctorId);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.doctors);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.fechaDesdeReserva);\n      i0.ɵɵadvance(21);\n      i0.ɵɵproperty(\"ngForOf\", ctx.reservations);\n    }\n  },\n  directives: [i4.SelectControlValueAccessor, i4.NgControlStatus, i4.NgModel, i5.NgForOf, i4.DefaultValueAccessor, i4.NgSelectOption, i4.ɵNgSelectMultipleOption, i5.NgIf],\n  styles: [\".reservasTitle[_ngcontent-%COMP%]{\\n        margin-top: 1.5rem;\\n        margin-bottom: 1rem;\\n        font-size: 1.5rem;\\n    }\\n    .reservasContent[_ngcontent-%COMP%]{\\n        padding: 0 2rem;\\n    }\\n    .tableContainer[_ngcontent-%COMP%]{\\n        width: 100vw;\\n        overflow-x: scroll;\\n    }\\n    table[_ngcontent-%COMP%] {\\n        border-collapse: collapse;\\n        width: 100%;\\n    }\\n\\n    td[_ngcontent-%COMP%], th[_ngcontent-%COMP%] {\\n        border: 1px solid #dddddd;\\n        text-align: left;\\n        padding: 8px;\\n    }\\n\\n    tr[_ngcontent-%COMP%]:nth-child(even) {\\n        background-color: #dddddd;\\n    }\"]\n});","map":{"version":3,"sources":["/home/seo/Desktop/primer-parcial-frontend/src/app/components/reservation/reservation.component.ts","/home/seo/Desktop/primer-parcial-frontend/src/app/components/reservation/reservation.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { DoctorService } from 'src/app/services/doctor.service';\nimport { PatientService } from 'src/app/services/patient.service';\nimport { ReservationService } from 'src/app/services/reservation.service';\nimport { getFechaForQuery } from 'src/app/services/utils';\n\n@Component({\n  selector: 'reservation-tab',\n  templateUrl: './reservation.component.html'\n})\nexport class ReservationComponent implements OnInit {\n  public reservations: Array<any> = [];\n  public patients: Array<any> = [];\n  public doctors: Array<any> = [];\n  public selectedDoctorId: number = 0;\n  public selectedPatientId: number = 0;\n  public fechaDesdeReserva: string;\n  public fechaHastaReserva: string;\n  constructor(private _doctorService: DoctorService, private _reservationService: ReservationService, private _patienService: PatientService) {\n    const fecha:string = getFechaForQuery( new Date((new Date()).valueOf() - 1000*60*60*24));\n    this.fechaDesdeReserva = `${fecha.substr(0,4)}-${fecha.substr(4,2)}-${fecha.substr(6)}`;\n    this.fechaHastaReserva = `${fecha.substr(0,4)}-${fecha.substr(4,2)}-${fecha.substr(6)}`;\n  }\n  async deleteReservation(idReserva: number){\n    await this._reservationService.cancelReservation(idReserva);\n    await this.getDoctorAgenda();\n  }\n  async reservate(reservation: any){\n    if(this.selectedDoctorId && this.selectedPatientId && reservation){\n      let {fechaCadena, horaInicioCadena, horaFinCadena} = reservation;\n      await this._reservationService.createReservation(fechaCadena,horaInicioCadena, horaFinCadena, this.selectedDoctorId, this.selectedPatientId);\n      await this.getDoctorAgenda();\n    }else{\n      console.log('Error reserving...');\n    }\n  }\n  async loadPatients(){\n    try{\n      this.patients = await this._patienService.getAllPatients();\n    }catch(error){\n      console.log(error);\n    }\n  }\n  async loadDoctors() {\n    try {\n      this.doctors = await this._doctorService.getAllFisios(); \n    } catch (error) {\n      console.log(error);\n    }\n\n  }\n  async getDoctorAgenda(){\n    this.reservations = await this._reservationService.getCompleteAgenda( this.selectedDoctorId, this.fechaDesdeReserva.replace(/-/gi, ''),  this.fechaHastaReserva.replace(/-/gi, ''));  \n  }\n  ngOnInit(): void {\n    this.loadDoctors();\n    this.loadPatients();\n  }\n\n}\n","<style>\n    .reservasTitle{\n        margin-top: 1.5rem;\n        margin-bottom: 1rem;\n        font-size: 1.5rem;\n    }\n    .reservasContent{\n        padding: 0 2rem;\n    }\n    .tableContainer{\n        width: 100vw;\n        overflow-x: scroll;\n    }\n    table {\n        border-collapse: collapse;\n        width: 100%;\n    }\n\n    td, th {\n        border: 1px solid #dddddd;\n        text-align: left;\n        padding: 8px;\n    }\n\n    tr:nth-child(even) {\n        background-color: #dddddd;\n    }\n</style>\n<main class=\"reservasContent\">\n    \n    <h2 class=\"reservasTitle\">Reservas</h2>\n    Doctor : <select [(ngModel)]=\"selectedDoctorId\">\n        <option *ngFor=\"let doctor of doctors\" [value]=\"doctor.idPersona\">\n            Dr. {{doctor.nombre}}  {{doctor.apellido}} \n        </option>\n    </select><br/><br/>\n    Fecha desde: <input ngDefaultControl type=\"date\" [(ngModel)]=\"fechaDesdeReserva\"/><br/><br/>\n    <!-- Fecha hasta: <input ngDefaultControl type=\"date\" [(ngModel)]=\"fechaHastaReserva\"/><br/><br/> -->\n    <button (click)=\"getDoctorAgenda()\" class=\"p-10 text-white br-4 bg-primary\">Ver disponibilidad</button>\n</main>\n<section class=\"reservasContent tableContainer\">\n    <table class=\"table\" class=\"mt-10\">\n        <tr>\n            <th>Día</th>\n            <th>Hora de inicio</th>\n            <th>Hora de fin</th>\n            <th>Observacion</th>\n            <th>Asistio</th>\n            <th>Esta reservado</th>\n            <th></th>\n        </tr>\n        <tr *ngFor=\"let reservation of reservations\">\n            <td>{{reservation.fecha}}</td>\n            <td>{{reservation.horaInicio}}</td>\n            <td>{{reservation.horaFin}}</td>\n            <td>{{reservation.observacion}}</td>\n            <td>{{reservation.flagAsistio}}</td>\n            <td>{{reservation.flagReserva}}</td>\n            <td *ngIf=\" reservation.flagReserva === 'No'; else reservedClientInfo \">\n                <select [(ngModel)]=\"selectedPatientId\">\n                    <option *ngFor=\"let patient of patients\" [value]=\"patient.id\">\n                        {{patient.fullName}}\n                    </option>\n                </select>\n                <button class=\"p-10 text-white br-4 bg-primary\" (click)=\"reservate(reservation)\">Reservar</button>\n            </td>\n            <ng-template #reservedClientInfo>\n                <td>\n                    {{reservation.idCliente.nombreCompleto}}\n                    <button class=\"p-10 text-white br-4 bg-red\" (click)=\"deleteReservation(reservation.idReserva)\">Cancelar reserva</button>\n                </td>\n            </ng-template>\n        </tr>\n    </table>\n</section>"],"sourceRoot":""},"metadata":{},"sourceType":"module"}