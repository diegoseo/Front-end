{"ast":null,"code":"import _asyncToGenerator from \"/home/seo/Desktop/primer-parcial-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/patient.service\";\nimport * as i2 from \"../includes/full-page-modal/full-page-modal.component\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"../includes/back-modal/back-modal.component\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"../includes/titled-input/titled-input.component\";\n\nfunction PatientComponent_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const patient_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"CI/RUC \", patient_r1.document, \"\");\n  }\n}\n\nfunction PatientComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵtemplate(2, PatientComponent_div_1_div_2_Template, 2, 1, \"div\", 11);\n    i0.ɵɵelementStart(3, \"div\", 12);\n    i0.ɵɵelementStart(4, \"strong\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 13);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\");\n    i0.ɵɵelementStart(11, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function PatientComponent_div_1_Template_button_click_11_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const patient_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.showEditPatientModal(patient_r1);\n    });\n    i0.ɵɵelement(12, \"i\", 15);\n    i0.ɵɵelementStart(13, \"div\", 16);\n    i0.ɵɵtext(14, \"Editar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const patient_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", patient_r1.document);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(patient_r1.fullName);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.email);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(patient_r1.phone);\n  }\n}\n\nexport class PatientComponent {\n  constructor(_service) {\n    this._service = _service;\n    this.showAddModal = false;\n    this.editingModal = false;\n    this.selectedPatient = {};\n    this.patients = [];\n    this.back = new EventEmitter();\n    this.clearSelectedPatient();\n  }\n\n  clearSelectedPatient() {\n    this.selectedPatient = {\n      id: '',\n      name: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      document: '',\n      type: 'FISICA',\n      birthday: ''\n    };\n  }\n\n  showNewClientModal() {\n    this.clearSelectedPatient();\n    this.editingModal = false;\n    this.showAddModal = true;\n  }\n\n  showEditPatientModal(patient) {\n    this.selectedPatient = patient;\n    this.showAddModal = true;\n    this.editingModal = true;\n  }\n\n  editPatient() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this._service.editPatient(_this.selectedPatient);\n\n      _this.clearSelectedPatient();\n\n      _this.editingModal = false;\n      _this.showAddModal = false;\n\n      _this.ngOnInit();\n    })();\n  }\n\n  createPatient() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const newPatient = yield _this2._service.createPatient(_this2.selectedPatient); // Concat new patient\n\n      _this2.patients = _this2.patients.concat(newPatient); // Clear\n\n      _this2.clearSelectedPatient(); // Close\n\n\n      _this2.showAddModal = false;\n    })();\n  }\n\n  get isValidSelectedPatient() {\n    return !!this.selectedPatient && !!this.selectedPatient.name && !!this.selectedPatient.lastName && !!this.selectedPatient.document && !!this.selectedPatient.phone && !!this.selectedPatient.type && !!this.selectedPatient.birthday;\n  }\n\n  loadPatients() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      _this3.patients = yield _this3._service.getAllPatients();\n    })();\n  }\n\n  ngOnInit() {\n    this.loadPatients();\n  }\n\n}\n\nPatientComponent.ɵfac = function PatientComponent_Factory(t) {\n  return new (t || PatientComponent)(i0.ɵɵdirectiveInject(i1.PatientService));\n};\n\nPatientComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PatientComponent,\n  selectors: [[\"patient-list\"]],\n  outputs: {\n    back: \"back\"\n  },\n  decls: 10,\n  vars: 12,\n  consts: [[\"title\", \"Pacientes\", \"btnAddText\", \"Nuevo paciente\", 3, \"added\", \"back\"], [\"class\", \"bb p-15 row justify-between\", 4, \"ngFor\", \"ngForOf\"], [\"ngDefaultControl\", \"\", 3, \"title\", \"ngModel\", \"canConfirm\", \"confirmButtonText\", \"ngModelChange\", \"confirmed\"], [\"ngDefaultControl\", \"\", \"title\", \"Nombre\", 3, \"ngModel\", \"ngModelChange\"], [\"ngDefaultControl\", \"\", \"title\", \"Apellido\", 3, \"ngModel\", \"ngModelChange\"], [\"ngDefaultControl\", \"\", \"title\", \"Email\", 3, \"ngModel\", \"ngModelChange\"], [\"ngDefaultControl\", \"\", \"title\", \"Celular\", 3, \"ngModel\", \"ngModelChange\"], [\"ngDefaultControl\", \"\", \"title\", \"CI/RUC\", 3, \"ngModel\", \"ngModelChange\"], [\"ngDefaultControl\", \"\", \"title\", \"Fecha de nacimiento\", \"type\", \"date\", 3, \"ngModel\", \"ngModelChange\"], [\"ngDefaultControl\", \"\", \"title\", \"Tipo de persona\", 3, \"ngModel\", \"ngModelChange\"], [1, \"bb\", \"p-15\", \"row\", \"justify-between\"], [\"class\", \"text-grey-5 fs-12\", 4, \"ngIf\"], [1, \"m-v-5\"], [1, \"text-grey-5\"], [1, \"row\", \"p-5\", \"text-grey-5\", 3, \"click\"], [1, \"fas\", \"fa-user-edit\"], [1, \"ml-5\", \"underline\"], [1, \"text-grey-5\", \"fs-12\"]],\n  template: function PatientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"full-page-modal\", 0);\n      i0.ɵɵlistener(\"added\", function PatientComponent_Template_full_page_modal_added_0_listener() {\n        return ctx.showNewClientModal();\n      })(\"back\", function PatientComponent_Template_full_page_modal_back_0_listener() {\n        return ctx.back.emit();\n      });\n      i0.ɵɵtemplate(1, PatientComponent_div_1_Template, 15, 4, \"div\", 1);\n      i0.ɵɵelementStart(2, \"back-modal\", 2);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_Template_back_modal_ngModelChange_2_listener($event) {\n        return ctx.showAddModal = $event;\n      })(\"confirmed\", function PatientComponent_Template_back_modal_confirmed_2_listener() {\n        return ctx.editingModal ? ctx.editPatient() : ctx.createPatient();\n      });\n      i0.ɵɵelementStart(3, \"titled-input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_Template_titled_input_ngModelChange_3_listener($event) {\n        return ctx.selectedPatient.name = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"titled-input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_Template_titled_input_ngModelChange_4_listener($event) {\n        return ctx.selectedPatient.lastName = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(5, \"titled-input\", 5);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_Template_titled_input_ngModelChange_5_listener($event) {\n        return ctx.selectedPatient.email = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(6, \"titled-input\", 6);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_Template_titled_input_ngModelChange_6_listener($event) {\n        return ctx.selectedPatient.phone = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"titled-input\", 7);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_Template_titled_input_ngModelChange_7_listener($event) {\n        return ctx.selectedPatient.document = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"titled-input\", 8);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_Template_titled_input_ngModelChange_8_listener($event) {\n        return ctx.selectedPatient.birthday = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(9, \"titled-input\", 9);\n      i0.ɵɵlistener(\"ngModelChange\", function PatientComponent_Template_titled_input_ngModelChange_9_listener($event) {\n        return ctx.selectedPatient.type = $event;\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", ctx.patients);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"title\", ctx.editingModal ? \"Modificar paciente \" + ctx.selectedPatient.id : \"Nuevo paciente\")(\"ngModel\", ctx.showAddModal)(\"canConfirm\", ctx.isValidSelectedPatient)(\"confirmButtonText\", ctx.editingModal ? \"Modificar\" : \"Crear\");\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedPatient.name);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedPatient.lastName);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedPatient.email);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedPatient.phone);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedPatient.document);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedPatient.birthday);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngModel\", ctx.selectedPatient.type);\n    }\n  },\n  directives: [i2.FullPageModalComponent, i3.NgForOf, i4.BackModalComponent, i5.DefaultValueAccessor, i5.NgControlStatus, i5.NgModel, i6.TitledInputComponent, i3.NgIf],\n  encapsulation: 2\n});","map":{"version":3,"sources":["/home/seo/Desktop/primer-parcial-frontend/src/app/components/patient/patient.component.ts","/home/seo/Desktop/primer-parcial-frontend/src/app/components/patient/patient.component.html"],"names":[],"mappings":"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","sourcesContent":["import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { PatientService } from '../../services/patient.service';\n\n@Component({\n  selector: 'patient-list',\n  templateUrl: './patient.component.html'\n})\nexport class PatientComponent implements OnInit {\n\n  public showAddModal: boolean = false;\n  public editingModal: boolean = false;\n  public selectedPatient: any = {};\n  public patients: Array<any> = [];\n  @Output() back = new EventEmitter();\n\n  constructor(private _service: PatientService) {\n    this.clearSelectedPatient();\n  }\n\n  clearSelectedPatient() {\n    this.selectedPatient = {\n      id: '',\n      name: '',\n      lastName: '',\n      email: '',\n      phone: '',\n      document: '',\n      type: 'FISICA',\n      birthday: '',\n    };\n  }\n\n  showNewClientModal() {\n    this.clearSelectedPatient();\n    this.editingModal = false;\n    this.showAddModal = true;\n  }\n\n  showEditPatientModal(patient: any) {\n    this.selectedPatient = patient;\n    this.showAddModal = true;\n    this.editingModal = true;\n  }\n\n  async editPatient() {\n    await this._service.editPatient(this.selectedPatient);\n    this.clearSelectedPatient();\n    this.editingModal = false;\n    this.showAddModal = false;\n    this.ngOnInit();\n  }\n\n  async createPatient() {\n    const newPatient = await this._service.createPatient(\n      this.selectedPatient\n    );\n    // Concat new patient\n    this.patients = this.patients.concat(newPatient);\n    // Clear\n    this.clearSelectedPatient();\n    // Close\n    this.showAddModal = false;\n  }\n\n  public get isValidSelectedPatient(): boolean {\n    return !!this.selectedPatient &&\n      !!this.selectedPatient.name &&\n      !!this.selectedPatient.lastName &&\n      !!this.selectedPatient.document &&\n      !!this.selectedPatient.phone &&\n      !!this.selectedPatient.type &&\n      !!this.selectedPatient.birthday;\n  }\n\n  async loadPatients() {\n    this.patients = await this._service.getAllPatients();\n  }\n\n  ngOnInit(): void {\n    this.loadPatients();\n  }\n\n}\n","<full-page-modal \n    title=\"Pacientes\"\n    btnAddText=\"Nuevo paciente\"\n    (added)=\"showNewClientModal()\"\n    (back)=\"back.emit()\"\n>\n    <div *ngFor=\"let patient of patients\" class=\"bb p-15 row justify-between\">\n        <div>\n            <div *ngIf=\"patient.document\" class=\"text-grey-5 fs-12\">CI/RUC {{patient.document}}</div>\n            <div class=\"m-v-5\"><strong>{{patient.fullName}}</strong></div>\n            <div>{{patient.email}}</div>\n            <div class=\"text-grey-5\">{{patient.phone}}</div>\n        </div>\n        <div>\n            <button class=\"row p-5 text-grey-5\" \n                (click)=\"showEditPatientModal(patient)\"\n            >\n                <i class=\"fas fa-user-edit\"></i>\n                <div class=\"ml-5 underline\">Editar</div>\n            </button>\n        </div>\n    </div>\n\n    <back-modal \n        ngDefaultControl\n        [title]=\"editingModal?'Modificar paciente '+selectedPatient.id:'Nuevo paciente'\"\n        [(ngModel)]=\"showAddModal\"\n        [canConfirm]=\"isValidSelectedPatient\"\n        [confirmButtonText]=\"editingModal?'Modificar':'Crear'\"\n        (confirmed)=\"editingModal?editPatient():createPatient()\"\n    >\n        <!-- NAME INPUT -->\n        <titled-input \n            ngDefaultControl \n            title=\"Nombre\" \n            [(ngModel)]=\"selectedPatient.name\">\n        </titled-input>\n        <!-- LAST NAME INPUT -->\n        <titled-input \n            ngDefaultControl \n            title=\"Apellido\" \n            [(ngModel)]=\"selectedPatient.lastName\">\n        </titled-input>\n        <!-- EMAIL INPUT -->\n        <titled-input \n            ngDefaultControl \n            title=\"Email\" \n            [(ngModel)]=\"selectedPatient.email\">\n        </titled-input>\n        <!-- PHONE INPUT -->\n        <titled-input \n            ngDefaultControl \n            title=\"Celular\" \n            [(ngModel)]=\"selectedPatient.phone\">\n        </titled-input>\n        <!-- DOCUMENT INPUT -->\n        <titled-input \n            ngDefaultControl \n            title=\"CI/RUC\" \n            [(ngModel)]=\"selectedPatient.document\">\n        </titled-input>\n        <!-- BIRTHDAY INPUT -->\n        <titled-input \n            ngDefaultControl \n            title=\"Fecha de nacimiento\" \n            type=\"date\"\n            [(ngModel)]=\"selectedPatient.birthday\">\n        </titled-input>\n        <!-- TYPE INPUT -->\n        <titled-input \n            ngDefaultControl \n            title=\"Tipo de persona\" \n            [(ngModel)]=\"selectedPatient.type\">\n        </titled-input>\n\n    </back-modal>\n\n</full-page-modal>\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}